# -*- coding: utf-8 -*-
"""DSBDA_A3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17qzSyFhP9aw_ryczAJOU4SZ4CxJKztWb

**data.csv**
"""

import pandas as pd

data = {
    'age': [25, 30, 22, 40, 55, 60, 33, 28, 45, 50],
    'income': [50000, 60000, 45000, 70000, 80000, 90000, 65000, 62000, 75000, 85000],
    'age_group': ['20-30', '30-40', '20-30', '40-50', '50-60', '50-60', '30-40', '20-30', '40-50', '50-60']
}

df = pd.DataFrame(data)

# Group the data by age_group and compute summary statistics for 'income'
summary_stats = df.groupby('age_group')['income'].describe()

print(summary_stats)

median_income = df.groupby('age_group')['income'].median()

print("Median Income by Age Group:")
print(median_income)

print("Column Names:", df.columns)

import pandas as pd

# Modified dataset with repeated values
data = {
    'age': [25, 30, 25, 40, 55, 60, 33, 28, 45, 50, 25, 30, 28, 30, 25],
    'income': [50000, 60000, 50000, 70000, 80000, 90000, 65000, 62000, 75000, 85000, 50000, 60000, 62000, 70000, 75000],
    'age_group': ['20-30', '30-40', '20-30', '40-50', '50-60', '50-60', '30-40', '20-30', '40-50', '50-60', '20-30', '30-40', '20-30', '30-40', '20-30']
}

df = pd.DataFrame(data)

# Calculate the mode for each column
mode_age = df['age'].mode()
mode_income = df['income'].mode()
print(f"Mode of Age: {mode_age.values}")
print(f"Mode of Income: {mode_income.values}")

"""**iris.csv**"""

import pandas as pd

df = pd.read_csv('iris.csv')

# Show basic structure of the data
print(df.head())

# Group by species and display summary statistics
summary_stats_species = df.groupby('variety').describe()

# Additionally, we can compute specific percentiles and statistics
percentiles = df.groupby('variety').quantile([0.25, 0.5, 0.75])

# Display summary statistics and percentiles
summary_stats_species = df.groupby('variety').describe()

print("\nPercentiles by Species:")
print(percentiles)

summary_stats_species = df.groupby('variety')['sepal.width'].describe()

print("\nSummary Statistics by Species for Sepal Width:")
print(summary_stats_species)

# Group by species and compute the median for numeric columns
median_values = df.groupby('variety').median()

print("Median Values by Species:")
print(median_values)

median_sepal_length = df.groupby('variety')['sepal.length'].median()
print("Median Sepal Length by Species:")
print(median_sepal_length)

mode_width = df['sepal.width'].mode()
print(f"Mode of Width: {mode_width.values}")